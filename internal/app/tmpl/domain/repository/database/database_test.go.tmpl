package database

import (
	"fmt"
	"log"
	"net"
	"os"
	"runtime"
	"testing"

	"github.com/jmoiron/sqlx"
	"github.com/joho/godotenv"
	_ "github.com/jackc/pgx/stdlib"
	_ "github.com/joho/godotenv/autoload"
	"github.com/ory/dockertest"
	"github.com/ory/dockertest/docker"

	"{{ .ModuleName }}/cmd/migrate/migrate"
	"{{ .ModuleName }}/configs"
	"{{ .ModuleName }}/internal/domain/{{ .DomainLowerCase }}"
)

//go:generate mockgen -package mock -source ../../repository.go -destination=../../mock/mock_repository.go

func NewMock() (*sqlx.DB, sqlmock.Sqlmock) {
	db, mock, err := sqlmock.New()
	if err != nil {
		log.Fatalf("an error '%s' was not expected when opening a stub database connection", err)
	}

	sqlxDB := sqlx.NewDb(db, "sqlmock")

	return sqlxDB, mock
}

func Test{{ .Domain }}Repository_Create(t *testing.T) {
	db, _ := NewMock()
	_ = New(db)
}

func TestRepository_Find(t *testing.T) {

}

func TestRepository_List(t *testing.T) {

}

func TestRepository_Update(t *testing.T) {

}

func TestRepository_Delete(t *testing.T) {

}

func TestRepository_Search(t *testing.T) {

}
