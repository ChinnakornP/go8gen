package postgres

import (
	"context"

	"github.com/jmoiron/sqlx"

	"{{ .ModuleName }}/internal/domain/{{ .DomainLowerCase }}"
	"{{ .ModuleName }}/internal/models"
)

type repository struct {
	db *sqlx.DB
}

func New(db *sqlx.DB) *repository {
	return &repository{db: db}
}

func (r *repository) Create(ctx context.Context, {{ .DomainLowerCase }} *models.{{ .Domain }}) (int64, error) {
    panic("implement me")
}

func (r *repository) All(ctx context.Context, f *{{ .DomainLowerCase }}.Filter) ([]*models.{{.Domain }}, error) {
	panic("implement me")
}

func (r *repository) Read(ctx context.Context, {{ .DomainLowerCase }}ID int64) (*models.{{ .Domain}}, error) {
	panic("implement me")
}

func (r *repository) Update(ctx context.Context, {{ .DomainLowerCase }} *models.{{ .Domain }}) error {
	panic("implement me")
}

func (r *repository) Delete(ctx context.Context, {{ .DomainLowerCase }}ID int64) error {
	panic("implement me")
}
